# Programa para separar n√∫meros pares e √≠mpares com valida√ß√£o e salvamento

print("üî¢ Classificador de N√∫meros: Pares e √çmpares\n")

# Listas principais
numeros = []   # Armazena todos os n√∫meros digitados
pares = []     # Armazena n√∫meros pares
impares = []   # Armazena n√∫meros √≠mpares

# Arquivo para salvar os resultados
ARQUIVO = "numeros_classificados.txt"

# Pergunta quantos n√∫meros o usu√°rio quer digitar
while True:
    try:
        qtd = int(input("Quantos n√∫meros voc√™ quer digitar? "))
        if qtd <= 0:
            print("Digite um n√∫mero maior que zero.")
        else:
            break
    except ValueError:
        print("Digite apenas n√∫meros inteiros.")

# Coleta dos n√∫meros com valida√ß√£o
for i in range(qtd):
    while True:
        try:
            num = int(input(f"Digite o n√∫mero {i+1}: "))
            numeros.append(num)
            break
        except ValueError:
            print("‚ö†Ô∏è Entrada inv√°lida! Digite um n√∫mero inteiro.")

# Classificando os n√∫meros
for num in numeros:
    if num % 2 == 0:
        pares.append(num)
    else:
        impares.append(num)

# Exibindo resultado no terminal
print("\n‚úÖ Classifica√ß√£o Final:")
print(f"üîµ N√∫meros Pares: {pares}")
print(f"üî¥ N√∫meros √çmpares: {impares}")

# Salvando os dados em um arquivo
try:
    with open(ARQUIVO, "w", encoding="utf-8") as arquivo:
        arquivo.write("üîµ N√∫meros Pares:\n")
        for p in pares:
            arquivo.write(f"{p}\n")
        arquivo.write("\nüî¥ N√∫meros √çmpares:\n")
        for i in impares:
            arquivo.write(f"{i}\n")
    print(f"\nüìÇ Resultados salvos no arquivo: {ARQUIVO}")
except Exception as e:
    print(f"‚ùå Erro ao salvar no arquivo: {e}")
